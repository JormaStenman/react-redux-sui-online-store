{"version":3,"sources":["features/cart/cartSlice.js","app/Navbar.js","app/client.js","features/orders/ordersSlice.js","features/products/productsSlice.js","app/MainContent.js","app/productUtils.js","app/numberFormats.js","app/StoreModal.js","app/Loading.js","features/products/ProductDetails.js","features/products/ProductList.js","features/cart/Cart.js","features/orders/Orders.js","features/orders/OrderDetails.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["cartSlice","createSlice","name","initialState","reducers","addToCart","state","action","productId","payload","setQuantity","newQuantity","emptyCart","_","actions","selectCartSlice","numItems","useSelector","Object","keys","length","selectNumberOfItemsInCart","Container","Menu","stackable","borderless","NavbarItem","path","position","Icon","Label","circular","children","location","useLocation","Item","active","pathname","as","Link","to","replace","storage","window","localStorage","ordersKey","productsKey","promiseToReturn","resultFunc","removeItem","newOrder","id","uuid","order","date","Date","toISOString","substr","createdAt","now","orders","loadOrders","storeOrders","orderId","deleted","values","products","loadProducts","product","Error","update","storeProducts","updated","maxDelay","errorProb","Promise","resolve","reject","setTimeout","error","random","toFixed","getError","result","e","JSON","parse","getItem","setItem","stringify","item","productsById","initialProducts","reduce","initProducts","OrderStatus","orderStatusToText","orderStatus","entityAdapter","createEntityAdapter","sortComparer","a","b","ordersSliceName","selectOrdersSlice","orderSelectors","getSelectors","fetchAllOrders","createAsyncThunk","client","condition","getState","ordersState","selectTotal","loading","createOrder","cancelOrder","clearOrders","ordersSlice","getInitialState","latestOrder","extraReducers","builder","addCase","fulfilled","setAll","rejected","removeAll","pending","addOne","removeOne","addMatcher","type","endsWith","message","localeCompare","productsSliceName","selectProductsSlice","productSelectors","fetchAllProducts","productsState","modifyInventory","quantity","inventory","clearProducts","productsSlice","upsertOne","ClearButton","dispatch","useDispatch","productsCount","useState","clearButtonDisabled","toggleClearButtonDisabled","clearButtonLoading","setClearButtonLoading","useEffect","dataInStorage","console","log","trigger","Button","Group","negative","icon","content","onClick","disabled","Segment","basic","compact","Popup","on","style","marginTop","Header","dividing","List","bulleted","relaxed","marginBottom","href","productImageSrc","currency","Intl","NumberFormat","render","modalOpen","setModalOpen","timeout","timeoutID","clearTimeout","Modal","closeIcon","onClose","open","Loading","what","Loader","ProductDetails","match","useRouteMatch","selectById","params","loadError","addModalOpen","setAddModalOpen","Card","centered","fluid","Grid","container","Row","Column","className","width","Image","size","inline","src","textAlign","Content","Meta","format","price","Description","details","extra","primary","StoreModal","Message","selectAll","divided","map","loc","currentLoc","truncate","Extra","ProductRow","parseInt","handleQuantityChange","evt","target","value","Table","Cell","Input","label","title","min","max","defaultValue","onChange","CartTotal","cart","selectEntities","cartTotal","total","orderModalOpen","setOrderModalOpen","selectLatestOrder","striped","HeaderCell","Body","Footer","colSpan","remaining","unitPrice","status","Inline","OrderRow","orderUrl","Placeholder","Line","join","success","OrderProductRow","history","useHistory","totalPrice","setTotalPrice","handleCancel","forEach","productIds","celled","App","Navbar","OrderDetails","Orders","Cart","MainContent","ProductList","configureStore","reducer","productsReducer","ordersReducer","cartReducer","Boolean","hostname","ReactDOM","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.64da1ac9.chunk.js","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\n\nexport const cartSlice = createSlice({\n    name: 'cart',\n    initialState: {},\n    reducers: {\n        addToCart: (state, action) => {\n            const productId = action.payload;\n            state[productId] |= 0;\n            state[productId]++;\n        },\n        setQuantity: (state, action) => {\n            const {productId, newQuantity} = action.payload;\n            state[productId] = newQuantity;\n            if (state[productId] <= 0) {\n                delete state[productId];\n            }\n        },\n        emptyCart: _ => ({}),\n    },\n});\n\nexport const {addToCart, emptyCart, setQuantity,} = cartSlice.actions;\n\nexport const selectCartSlice = state => state[cartSlice.name];\n\nexport const selectNumberOfItemsInCart = state => Object.keys(selectCartSlice(state)).length;\n\nexport default cartSlice.reducer;","import {Container, Icon, Label, Menu} from \"semantic-ui-react\";\nimport {Link, useLocation} from \"react-router-dom\";\nimport {useSelector} from \"react-redux\";\nimport {selectNumberOfItemsInCart} from \"../features/cart/cartSlice\";\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default () => {\n    const numItems = useSelector(state => selectNumberOfItemsInCart(state));\n    return (\n        <Container>\n            <Menu stackable borderless>\n                <NavbarItem path='/main'>Main</NavbarItem>\n                <NavbarItem path='/products'>Products</NavbarItem>\n                <Menu.Menu position='right'>\n                    <NavbarItem path='/orders'>\n                        My Orders\n                    </NavbarItem>\n                    <NavbarItem path='/cart'>\n                        <Icon name='shopping cart'/>Shopping cart\n                        {numItems ? <Label circular>{numItems}</Label> : null}\n                    </NavbarItem>\n                </Menu.Menu>\n            </Menu>\n        </Container>\n    );\n}\n\nfunction NavbarItem({path, children}) {\n    const location = useLocation();\n    return (\n        <Menu.Item active={location.pathname === path} as={Link} to={path} replace>\n            {children}\n        </Menu.Item>\n    );\n}","import initialProducts from '../data/products.json';\nimport {random} from 'lodash/number'\nimport {v4 as uuid} from 'uuid';\n\nconst storage = window.localStorage;\n\n// noinspection SpellCheckingInspection\nconst ordersKey = 'me.stenman.orders';\n\n// noinspection SpellCheckingInspection\nconst productsKey = 'me.stenman.products';\n\nexport const getProductById = id => {\n    return promiseToReturn({\n        resultFunc: () => {\n            const products = loadProducts();\n            if (id in products) {\n                return {\n                    product: products[id],\n                }\n            }\n            throw new Error(`no product found matching id ${id}`);\n        },\n    });\n};\n\nexport const getProductsByIds = ids => {\n    return promiseToReturn({\n        resultFunc: () => {\n            const idSet = new Set(ids);\n            const products = loadProducts();\n            const requestedProducts = idSet.keys().reduce((ary, productId) => {\n                if (products[productId]) {\n                    ary.push(products[productId]);\n                }\n                return ary;\n            }, []);\n            return {\n                products: requestedProducts,\n            };\n        },\n    });\n};\n\nexport const getAllProducts = () => {\n    return promiseToReturn({\n        resultFunc: () => ({\n            products: Object.values(loadProducts())\n        }),\n    });\n};\n\nexport const updateProduct = update => {\n    return promiseToReturn({\n        resultFunc: () => {\n            const products = loadProducts();\n            if (update.id in products) {\n                products[update.id] = {\n                    ...products[update.id],\n                    ...update,\n                };\n                storeProducts(products);\n                return {\n                    updated: products[update.id],\n                };\n            }\n            throw new Error(`No product found with id ${update.id}.`);\n        },\n    });\n};\n\nexport const getAllOrders = () => {\n    return promiseToReturn({\n        resultFunc: () => ({\n            orders: Object.values(loadOrders())\n        }),\n    });\n};\n\nexport const createOrder = newOrder => {\n    return promiseToReturn({\n        resultFunc: () => {\n            const id = uuid();\n            const order = {\n                ...newOrder,\n                id,\n                date: new Date().toISOString().substr(0, 10),\n                createdAt: Date.now(),\n            };\n            const orders = loadOrders();\n            orders[id] = order;\n            storeOrders(orders);\n            return {\n                order,\n            }\n        },\n    });\n};\n\nexport const deleteOrder = orderId => {\n    return promiseToReturn({\n        resultFunc: () => {\n            const orders = loadOrders();\n            delete orders[orderId]\n            storeOrders(orders);\n            return {\n                deleted: orderId,\n            }\n        },\n    });\n};\n\nconst clearOrders = () => promiseToReturn({\n    resultFunc: () => {\n        storage.removeItem(ordersKey);\n    },\n});\n\nconst clearProducts = () => promiseToReturn({\n    resultFunc: () => {\n        storage.removeItem(productsKey);\n    },\n});\n\nexport const hasDataInStorage = () => storage.getItem(ordersKey) !== null || storage.getItem(productsKey) !== null;\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n    clearOrders,\n    clearProducts,\n    createOrder,\n    deleteOrder,\n    getAllOrders,\n    getAllProducts,\n    getProductById,\n    getProductsByIds,\n    updateProduct,\n};\n\nfunction getError(errorProb) {\n    if (random(1, true) <= errorProb) {\n        return `A fake API error occurred. Error probability\n        ${(errorProb * 100).toFixed()}% is adjustable in client.js.`;\n    }\n    return null;\n}\n\nfunction promiseToReturn({resultFunc = () => undefined, maxDelay = 5000, errorProb = 0.0}) {\n    return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                    const error = getError(errorProb);\n                    if (error) {\n                        reject(new Error(error))\n                    } else {\n                        let result;\n                        try {\n                            result = resultFunc();\n                        } catch (e) {\n                            reject(e);\n                        }\n                        resolve(result);\n                    }\n                },\n                random(maxDelay)\n            );\n        }\n    );\n}\n\nfunction loadOrders() {\n    return JSON.parse(storage.getItem(ordersKey) || '{}');\n}\n\nfunction storeOrders(orders) {\n    storage.setItem(ordersKey, JSON.stringify(orders));\n}\n\nfunction initProducts() {\n    const productsById = initialProducts.reduce((productsById, product) => {\n        productsById[product.id] = product;\n        return productsById;\n    }, {});\n    storeProducts(productsById);\n    return productsById;\n}\n\nfunction loadProducts() {\n    const item = storage.getItem(productsKey);\n    return item ? JSON.parse(item) : initProducts();\n}\n\nfunction storeProducts(products) {\n    storage.setItem(productsKey, JSON.stringify(products));\n}","import {createAsyncThunk, createEntityAdapter, createSlice} from \"@reduxjs/toolkit\";\nimport client from \"../../app/client\";\n\nexport const OrderStatus = {\n    ordered: 'ordered',\n    waitingForProducts: 'waitingForProducts',\n};\n\nexport function orderStatusToText(orderStatus) {\n    switch (orderStatus) {\n        case OrderStatus.ordered:\n            return 'ordered';\n        case OrderStatus.waitingForProducts:\n            return 'waiting for products';\n        default:\n            return '';\n    }\n}\n\nconst entityAdapter = createEntityAdapter({\n    sortComparer: (a, b) => b.createdAt - a.createdAt,\n});\n\nconst ordersSliceName = 'orders';\n\nexport const selectOrdersSlice = state => state[ordersSliceName];\n\nexport const selectLatestOrder = state => selectOrdersSlice(state).latestOrder;\n\nexport const orderSelectors = entityAdapter.getSelectors(state => selectOrdersSlice(state));\n\nexport const fetchAllOrders = createAsyncThunk(\n    'orders/fetchAllOrders',\n    async (_) => {\n        return client.getAllOrders();\n    },\n    {\n        condition: (_, {getState}) => {\n            const ordersState = selectOrdersSlice(getState());\n            const total = entityAdapter.getSelectors().selectTotal(ordersState);\n            return total === 0 && !ordersState.loading;\n        },\n    },\n);\n\nexport const createOrder = createAsyncThunk(\n    'orders/createOrder',\n    async newOrder => {\n        return client.createOrder(newOrder);\n    },\n);\n\nexport const cancelOrder = createAsyncThunk(\n    'orders/cancelOrder',\n    async orderId => {\n        return client.deleteOrder(orderId);\n    },\n);\n\nexport const clearOrders = createAsyncThunk(\n    'orders/clearOrders',\n    async () => {\n        return client.clearOrders();\n    },\n);\n\nexport const ordersSlice = createSlice({\n    name: ordersSliceName,\n    initialState: entityAdapter.getInitialState({\n        loading: false,\n        error: null,\n        latestOrder: null,\n    }),\n    reducers: {},\n    extraReducers: builder => {\n        builder\n            .addCase(fetchAllOrders.fulfilled, (state, action) => {\n                entityAdapter.setAll(state, action.payload.orders);\n            })\n            .addCase(fetchAllOrders.rejected, state => {\n                entityAdapter.removeAll(state);\n            })\n            .addCase(createOrder.pending, state => {\n                state.latestOrder = null;\n            })\n            .addCase(createOrder.fulfilled, (state, action) => {\n                state.latestOrder = action.payload.order;\n                entityAdapter.addOne(state, action.payload.order);\n            })\n            .addCase(cancelOrder.fulfilled, (state, action) => {\n                entityAdapter.removeOne(state, action.payload.deleted);\n            })\n            .addCase(clearOrders.fulfilled, (state) => {\n                entityAdapter.removeAll(state);\n            })\n            .addMatcher(action => action.type.endsWith('/pending'), state => {\n                state.loading = true;\n                state.error = null;\n            })\n            .addMatcher(action => action.type.endsWith('/fulfilled'), state => {\n                state.loading = false;\n                state.error = null;\n            })\n            .addMatcher(action => action.type.endsWith('/rejected'), (state, action) => {\n                state.loading = false;\n                state.error = action.error.message;\n            })\n        ;\n    },\n});\n\nexport default ordersSlice.reducer;","import {createAsyncThunk, createEntityAdapter, createSlice} from \"@reduxjs/toolkit\";\nimport client from \"../../app/client\";\n\nconst entityAdapter = createEntityAdapter({\n    sortComparer: (a, b) => a.name.localeCompare(b.name),\n});\n\nconst productsSliceName = 'products';\n\nexport const selectProductsSlice = state => state[productsSliceName];\n\nexport const productSelectors = entityAdapter.getSelectors(state => selectProductsSlice(state));\n\nexport const fetchAllProducts = createAsyncThunk(\n    'products/fetchAllProducts',\n    async (_) => {\n        return await client.getAllProducts();\n    },\n    {\n        condition: (_, {getState}) => {\n            const productsState = selectProductsSlice(getState());\n            const total = entityAdapter.getSelectors().selectTotal(productsState);\n            return total === 0 && !productsState.loading;\n        },\n    }\n);\n\nexport const modifyInventory = createAsyncThunk(\n    'products/modifyInventory',\n    async ({productId, quantity}) => {\n        let {product: {id, inventory}} = await client.getProductById(productId);\n        inventory += quantity;\n        return client.updateProduct({\n            id,\n            inventory,\n        });\n    },\n);\n\nexport const clearProducts = createAsyncThunk(\n    'products/clearProducts',\n    async () => {\n        return client.clearProducts();\n    }\n);\n\nexport const productsSlice = createSlice({\n    name: productsSliceName,\n    initialState: entityAdapter.getInitialState({\n        loading: false,\n        error: null,\n    }),\n    reducers: {},\n    extraReducers: builder => {\n        builder\n            .addCase(fetchAllProducts.fulfilled, (state, action) => {\n                entityAdapter.setAll(state, action.payload.products);\n            })\n            .addCase(fetchAllProducts.rejected, state => {\n                entityAdapter.removeAll(state);\n            })\n            .addCase(modifyInventory.fulfilled, (state, action) => {\n                entityAdapter.upsertOne(state, action.payload.updated);\n            })\n            .addCase(clearProducts.fulfilled, state => {\n                entityAdapter.removeAll(state);\n            })\n            .addMatcher(action => action.type.endsWith('/pending'), state => {\n                state.loading = true;\n                state.error = null;\n            })\n            .addMatcher(action => action.type.endsWith('/fulfilled'), state => {\n                state.loading = false;\n                state.error = null;\n            })\n            .addMatcher(action => action.type.endsWith('/rejected'), (state, action) => {\n                state.loading = false;\n                state.error = action.error.message;\n            })\n        ;\n    },\n});\n\nexport default productsSlice.reducer;","import {Button, Container, Header, List, Popup, Segment} from \"semantic-ui-react\";\nimport React, {useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {clearOrders} from \"../features/orders/ordersSlice\";\nimport {clearProducts, productSelectors} from \"../features/products/productsSlice\";\nimport {hasDataInStorage} from \"./client\";\n\nfunction ClearButton() {\n    const dispatch = useDispatch();\n    const productsCount = useSelector(state => productSelectors.selectTotal(state));\n    const [clearButtonDisabled, toggleClearButtonDisabled] = useState(true);\n    const [clearButtonLoading, setClearButtonLoading] = useState(false);\n\n    useEffect(() => {\n        (() => {\n            const dataInStorage = hasDataInStorage();\n            console.log('MainContent: dataInStorage', dataInStorage);\n            if (!dataInStorage) {\n                // Clear the loading status by default when there's no storage data.\n                // It's set to true only, whenever the clear button is clicked,\n                // and is safe to reset even when it wasn't clicked.\n                setClearButtonLoading(false);\n            }\n            toggleClearButtonDisabled(!dataInStorage);\n        })();\n        // It's not necessary to watch orders count change,\n        // because all storage will be cleared upon the clear button press.\n        // Furthermore, if we did watch the orders too, we'd get two effects,\n        // and the clear button would flash disabled/enabled.\n    }, [productsCount]);\n\n    function handleClear() {\n        setClearButtonLoading(true);\n        toggleClearButtonDisabled(true);\n        // Handle the local storage clearing through Redux, so that both will match.\n        dispatch(clearOrders());\n        dispatch(clearProducts());\n    }\n\n    const trigger = (\n        // If the button isn't wrapped in anything, and happens to be disabled,\n        // the Popup tooltip won't show.\n        <Button.Group>\n            <Button\n                negative\n                icon='trash alternate'\n                content='Clear local storage area'\n                onClick={() => handleClear()}\n                disabled={clearButtonDisabled}\n                loading={clearButtonLoading}\n            />\n        </Button.Group>\n    );\n\n    const content = clearButtonDisabled ? (\n        <Segment basic compact>\n            <p>No data in this application's local storage area.</p>\n            <p>An easy way to load some is to visit the Products page.</p>\n        </Segment>\n    ) : (\n        <Segment basic compact>\n            <p>Click to remove this application's data from the local storage area.</p>\n        </Segment>\n    );\n\n    return (\n        <Popup\n            content={content}\n            trigger={trigger}\n            on={['hover', 'click']}\n            position='bottom left'\n        />\n    );\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default () => (\n    <Container style={{marginTop: '2em'}}>\n        <ClearButton/>\n        <Header as='h2' dividing>Demo Online Store</Header>\n        <p>\n            This web application demonstrates the following features usually found in any online store\n            website:\n        </p>\n        <List bulleted relaxed style={{marginTop: '2em', marginBottom: '2em'}}>\n            <List.Item>A list of products can be browsed.</List.Item>\n            <List.Item>The details of any product can be viewed.</List.Item>\n            <List.Item>Products can be added into a shopping cart.</List.Item>\n            <List.Item>The contents of the shopping cart can be manipulated before ordering.</List.Item>\n            <List.Item>The list of orders can be viewed.</List.Item>\n            <List.Item>The details of any order can be viewed.</List.Item>\n            <List.Item>An order can be cancelled.</List.Item>\n            <List.Item>Product inventories change when orders are placed or cancelled.</List.Item>\n            <List.Item>A navigation bar is always visible at the top of the page.</List.Item>\n        </List>\n        <Header as='h2' dividing>Implementation aspects</Header>\n        <p>\n            A few implementation details worth mentioning:\n        </p>\n        <List bulleted relaxed style={{marginTop: '2em', marginBottom: '2em'}}>\n            <List.Item>\n                This application is an implementation of <a\n                href='https://github.com/florinpop17/app-ideas/blob/master/Projects/2-Intermediate/Simple-Online-Store.md'>\n                this app-idea</a>.\n            </List.Item>\n            <List.Item>\n                The application is a <a href='https://en.wikipedia.org/wiki/Single-page_application'>Single\n                Page Application</a> working entirely inside the browser.\n            </List.Item>\n            <List.Item>\n                The application currently has no database integration. Instead, it stores all product and order data\n                in <a href='https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage'>the local\n                storage area</a> of the user's browser. There's a button to explicitly clear this application's\n                local storage area at the top of this page.\n            </List.Item>\n            <List.Item>\n                A client library, which simulates asynchronous client-server communication using <a\n                href='https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise'>Promises</a>,\n                is used between the app state and the actual storage area.\n            </List.Item>\n        </List>\n        <Header as='h2' dividing>Implementation techniques</Header>\n        <p>\n            The application utilizes the following techniques and libraries:\n        </p>\n        <List bulleted relaxed style={{marginTop: '2em', marginBottom: '2em'}}>\n            <List.Item>\n                All code is <a href='https://www.w3schools.com/Js/js_2018.asp'>ECMAScript 2018</a>.\n            </List.Item>\n            <List.Item>\n                The initial project structure was created using <a\n                href='https://create-react-app.dev'>Create React App</a> with <a\n                href='https://www.npmjs.com/package/cra-template-redux'>the Redux template</a>.\n            </List.Item>\n            <List.Item>\n                All components are <a href='https://reactjs.org/docs/components-and-props.html'>React Function\n                Components</a>.\n            </List.Item>\n            <List.Item>\n                Application state is managed using <a href='https://reactjs.org/docs/hooks-intro.html'>React\n                Hooks</a> and <a href='https://redux-toolkit.js.org'>Redux Toolkit</a>.\n            </List.Item>\n            <List.Item>\n                Navigation within the application is managed by <a href='https://reactrouter.com'>React Router</a>.\n            </List.Item>\n            <List.Item>\n                UI components come from <a href='https://react.semantic-ui.com'>Semantic UI React</a>\n            </List.Item>\n            <List.Item>\n                Some utility functions from <a href='https://lodash.com'>Lodash</a> are used.\n            </List.Item>\n        </List>\n        <Header as='h2' dividing>What next?</Header>\n        <p>\n            The app is pretty basic in its current state. Here are some ideas of what to add\n            next:\n        </p>\n        <List bulleted relaxed style={{marginTop: '2em', marginBottom: '2em'}}>\n            <List.Item>\n                As the main purpose of developing this app was to explore <a\n                href='https://reactjs.org'>React</a> and related technologies, and time was limited, unit tests were\n                omitted.\n            </List.Item>\n            <List.Item>\n                There's no login/logout functionality for users.\n            </List.Item>\n            <List.Item>\n                Could use a real database with a backend service.\n            </List.Item>\n            <List.Item>\n                The app only speaks English. It could do with some l10n love.\n            </List.Item>\n            <List.Item>\n                Neither the products nor the orders listings are paged.\n            </List.Item>\n        </List>\n        <Header as='h2' dividing>Image credits</Header>\n        <p>\n            The images used in this app were downloaded from <a href='https://creativecommons.org'>the Creative\n            Commons website</a>. Here are the credits to their creators:\n        </p>\n        <List bulleted relaxed style={{marginTop: '2em', marginBottom: '2em'}}>\n            <List.Item>\n                \"Fruit salad\" by lisaclarke is licensed with CC BY-ND 2.0. To view a copy of this license, visit\n                &nbsp;<a\n                href='https://creativecommons.org/licenses/by-nd/2.0/'>https://creativecommons.org/licenses/by-nd/2.0/</a>\n            </List.Item>\n            <List.Item>\n                \"Fruit Veggie Art\" by NicoleMariePhotoworks is licensed with CC BY 2.0. To view a copy of this\n                license, visit <a\n                href='https://creativecommons.org/licenses/by/2.0/'>https://creativecommons.org/licenses/by/2.0/</a>\n            </List.Item>\n            <List.Item>\n                \"Fruit for a crisp\" by lisaclarke is licensed under CC BY-ND 2.0\n            </List.Item>\n            <List.Item>\n                \"Fruits on a plate (testing iPhone 6+)\" by Sergey Galyonkin is licensed under CC BY-SA 2.0\n            </List.Item>\n            <List.Item>\n                \"#napoli #market #antignano #frutta #fruits #clementine\" by Antonio Manfredonio is licensed under CC\n                BY-SA 2.0\n            </List.Item>\n            <List.Item>\n                \"strawberries\" by seelensturm is licensed under CC BY 2.0\n            </List.Item>\n            <List.Item>\n                \"File:Grapes Emoji.png\" by EmmanuelCordoliani is licensed under CC BY-SA 4.0\n            </List.Item>\n        </List>\n    </Container>\n)","export function productImageSrc(productId) {\n    return `/product_pics/${productId}.jpeg`;\n}\n\nconst utils = {\n    imageSrc: productImageSrc,\n};\n\nexport default utils;","export const currency = new Intl.NumberFormat('fi-FI', {\n    style: 'currency',\n    currency: 'EUR',\n});\nconst numberFormats = {\n    currency,\n};\nexport default numberFormats;","import {useEffect} from \"react\";\nimport {Modal} from \"semantic-ui-react\";\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default ({render, modalOpen, setModalOpen, timeout}) => {\n    useEffect(() => {\n        let timeoutID = null;\n        if (timeout) {\n            timeoutID = setTimeout(() => setModalOpen(false), timeout);\n        }\n        return () => timeoutID && clearTimeout(timeoutID);\n    });\n\n    return (\n        <Modal\n            closeIcon\n            onClose={() => setModalOpen(false)}\n            open={modalOpen}\n        >\n            {render()}\n        </Modal>\n    );\n};","import {Loader} from \"semantic-ui-react\";\n\nexport default function Loading({what}) {\n    return (\n        <Loader active content={`Loading ${what}...`}/>\n    );\n}","import {Button, Card, Container, Grid, Image, Message, Modal} from \"semantic-ui-react\";\nimport {Link, useRouteMatch} from \"react-router-dom\";\nimport {productImageSrc} from \"../../app/productUtils\";\nimport {currency} from \"../../app/numberFormats\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {fetchAllProducts, productSelectors, selectProductsSlice} from \"./productsSlice\";\nimport {useEffect, useState} from \"react\";\nimport {addToCart} from \"../cart/cartSlice\";\nimport StoreModal from \"../../app/StoreModal\";\nimport Loading from \"../../app/Loading\";\n\nexport default function ProductDetails() {\n    const match = useRouteMatch();\n    const product = useSelector(state => productSelectors.selectById(state, match.params.productId));\n    const loading = useSelector(state => selectProductsSlice(state).loading);\n    const loadError = useSelector(state => selectProductsSlice(state).error);\n    const dispatch = useDispatch();\n    const [addModalOpen, setAddModalOpen] = useState(false);\n\n    useEffect(() => {\n        dispatch(fetchAllProducts());\n    }, [dispatch]);\n\n    function handleAddClick(productId) {\n        dispatch(addToCart(productId));\n        setAddModalOpen(true);\n    }\n\n    if (product) {\n        return (\n            <Container>\n                <Card centered fluid>\n                    <Grid stackable container>\n                        <Grid.Row>\n                            <Grid.Column>\n                                <Card.Header>\n                                    <span className='meta'>{product.id}</span>\n                                    <span>&nbsp;</span>\n                                    <span>{product.name}</span>\n                                </Card.Header>\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <Grid.Column width='3'>\n                                <Image size='small' inline src={productImageSrc(product.id)}/>\n                            </Grid.Column>\n                            <Grid.Column width='13' textAlign='justified'>\n                                <Card.Content>\n                                    <Card.Meta>\n                                        <span className='price'>{currency.format(product.price || 0)}</span>\n                                    </Card.Meta>\n                                    <Card.Description>\n                                        {product.details}\n                                    </Card.Description>\n                                </Card.Content>\n                                <Card.Content extra>\n                                    <Card.Meta>\n                                        <span>In stock: {product.inventory}</span>\n                                    </Card.Meta>\n                                </Card.Content>\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <Grid.Column>\n                                <Button.Group>\n                                    <Button icon='arrow alternate circle left outline' content='See more products'\n                                            as={Link}\n                                            to='/products'/>\n                                    <Button primary icon='add to cart' content='Add to cart'\n                                            onClick={() => handleAddClick(match.params.productId)}/>\n                                </Button.Group>\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n                </Card>\n                <StoreModal\n                    modalOpen={addModalOpen}\n                    setModalOpen={setAddModalOpen}\n                    timeout={5000}\n                    render={() => (\n                        <>\n                            <Modal.Header>\n                                One of <i>{product.name}</i> added in <Link to='/cart' replace>cart</Link>.\n                            </Modal.Header>\n                            <Modal.Content>\n                                <Image size='tiny' inline src={productImageSrc(product.id)}/>\n                            </Modal.Content>\n                        </>\n                    )}\n                />\n            </Container>\n        );\n    }\n\n    if (loading) {\n        return <Loading what='product'/>;\n    }\n\n    if (loadError) {\n        return <Message error content={loadError}/>\n    }\n\n    return null;\n}","import {Button, Item, Message} from \"semantic-ui-react\";\nimport {currency} from \"../../app/numberFormats\";\nimport {truncate} from \"lodash/string\";\nimport {Link} from \"react-router-dom\";\nimport {productImageSrc} from \"../../app/productUtils\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {fetchAllProducts, productSelectors, selectProductsSlice} from \"./productsSlice\";\nimport {useEffect} from \"react\";\nimport Loading from \"../../app/Loading\";\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default () => {\n\n    const dispatch = useDispatch();\n    const products = useSelector(state => productSelectors.selectAll(state));\n    const loading = useSelector(state => selectProductsSlice(state).loading);\n    const loadError = useSelector(state => selectProductsSlice(state).error);\n\n    useEffect(() => {\n        dispatch(fetchAllProducts());\n    }, [dispatch]);\n\n    function itemLoc(currentLoc, productId) {\n        return {\n            ...currentLoc,\n            pathname: `${currentLoc.pathname}/${productId}`,\n        };\n    }\n\n    if (products && products.length) {\n        return (\n            <Item.Group divided>\n                {products.map(product => (\n                    <Item key={product.id} as={Link} to={loc => itemLoc(loc, product.id)}>\n                        <Item.Image size='tiny' src={productImageSrc(product.id)}/>\n                        <Item.Content>\n                            <Item.Header>{product.name}</Item.Header>\n                            <Item.Meta>\n                                <span className='price'>{currency.format(product.price || 0)}</span>\n                            </Item.Meta>\n                            <Item.Description>\n                                {truncate(product.details, {length: 200})}\n                            </Item.Description>\n                            <Item.Extra>\n                                <Button>Select</Button>\n                            </Item.Extra>\n                        </Item.Content>\n                    </Item>\n                ))}\n            </Item.Group>\n        );\n    }\n\n    if (loading) {\n        return <Loading what='products'/>;\n    }\n\n    if (loadError) {\n        return <Message error content={loadError}/>\n    }\n\n    return null;\n}","import {Button, Input, Modal, Segment, Table} from \"semantic-ui-react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {emptyCart, selectCartSlice, setQuantity} from \"./cartSlice\";\nimport {productSelectors, modifyInventory} from \"../products/productsSlice\";\nimport {currency} from \"../../app/numberFormats\";\nimport {Link} from \"react-router-dom\";\nimport {createOrder, OrderStatus, selectLatestOrder} from \"../orders/ordersSlice\";\nimport {useState} from \"react\";\nimport StoreModal from \"../../app/StoreModal\";\nimport Loading from \"../../app/Loading\";\n\nfunction ProductRow({productId}) {\n    const product = useSelector(state => productSelectors.selectById(state, parseInt(productId)));\n    const quantity = useSelector(state => selectCartSlice(state)[product.id]);\n    const dispatch = useDispatch();\n\n    function handleQuantityChange(evt) {\n        const newQuantity = parseInt(evt.target.value);\n        dispatch(setQuantity({productId: product.id, newQuantity}));\n    }\n\n    if (product) {\n        // noinspection JSUnresolvedVariable\n        return (\n            <Table.Row>\n                <Table.Cell><Link to={`/products/${product.id}`}>{product.id}</Link></Table.Cell>\n                <Table.Cell>{product.name}</Table.Cell>\n                <Table.Cell>{currency.format(product.price || 0)}</Table.Cell>\n                <Table.Cell>\n                    <Input\n                        fluid\n                        label={<Button\n                            icon='remove'\n                            onClick={() => handleQuantityChange({target: {value: 0}})}\n                            title='remove'\n                        />}\n                        type='number'\n                        min={1}\n                        max={product.inventory}\n                        defaultValue={quantity}\n                        onChange={handleQuantityChange}\n                    />\n                </Table.Cell>\n            </Table.Row>\n        );\n    }\n    return null;\n}\n\nfunction CartTotal() {\n    const cart = useSelector(state => selectCartSlice(state));\n    const products = useSelector(state => productSelectors.selectEntities(state));\n    const cartTotal = Object.keys(cart).reduce(\n        (total, productId) => total + cart[productId] * products[parseInt(productId)].price, 0.0\n    );\n    return (\n        <span>Cart total:&nbsp;<strong>{currency.format(cartTotal)}</strong></span>\n    );\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default () => {\n    const cart = useSelector(state => selectCartSlice(state));\n    const dispatch = useDispatch();\n    const products = useSelector(state => productSelectors.selectEntities(state));\n    const [orderModalOpen, setOrderModalOpen] = useState(false);\n    const latestOrder = useSelector(state => selectLatestOrder(state));\n\n    function assembleOrder() {\n        return Object.keys(cart).reduce((order, productId) => {\n            const product = products[parseInt(productId)];\n            const quantity = cart[productId];\n            // noinspection JSUnresolvedVariable\n            const remaining = product.inventory - quantity;\n            if (!order.products[productId]) {\n                order.products[productId] = {\n                    unitPrice: product.price,\n                    quantity,\n                };\n            }\n            if (order.status !== OrderStatus.waitingForProducts) {\n                // any product not in stock will set order status to 'waiting for products'\n                order.status = remaining < 0 ? OrderStatus.waitingForProducts : OrderStatus.ordered;\n            }\n            dispatch(modifyInventory({\n                productId: product.id,\n                quantity: -quantity,\n            }));\n            return order;\n        }, {products: {}});\n    }\n\n    function handlePlaceOrder() {\n        dispatch(createOrder(assembleOrder()));\n        dispatch(emptyCart());\n        setOrderModalOpen(true);\n    }\n\n    function orderModal() {\n        if (latestOrder) {\n            return (\n                <StoreModal\n                    modalOpen={orderModalOpen}\n                    setModalOpen={setOrderModalOpen}\n                    render={() => (\n                        <>\n                            <Modal.Header>\n                                Thank you for your order!\n                            </Modal.Header>\n                            <Modal.Content>\n                                <Segment.Group>\n                                    <Segment.Inline>\n                                        <Link to={`/orders/${latestOrder.id}`} replace>View this order.</Link>\n                                    </Segment.Inline>\n                                    <Segment.Inline>\n                                        You can view all your orders on the <Link to='/orders' replace>Orders\n                                        page</Link>\n                                    </Segment.Inline>\n                                </Segment.Group>\n                            </Modal.Content>\n                        </>\n                    )}\n                />\n            );\n        }\n        if (orderModalOpen) {\n            return <Loading what='order'/>\n        }\n        return null;\n    }\n\n    return (\n        <>\n            <Table striped>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell width='1'>ID</Table.HeaderCell>\n                        <Table.HeaderCell width='10'>Name</Table.HeaderCell>\n                        <Table.HeaderCell width='3'>Unit Price</Table.HeaderCell>\n                        <Table.HeaderCell width='2'>Quantity</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    {Object.keys(cart).map(productId => (\n                        <ProductRow key={productId} productId={productId}/>\n                    ))}\n                </Table.Body>\n                <Table.Footer>\n                    <Table.Row>\n                        <Table.HeaderCell colSpan='4'>\n                            <CartTotal/>\n                        </Table.HeaderCell>\n                    </Table.Row>\n                </Table.Footer>\n            </Table>\n            <Button.Group>\n                <Button\n                    as={Link}\n                    content='See more products'\n                    icon='arrow alternate circle left outline'\n                    to='/products'\n                />\n                <Button\n                    content='Cancel order'\n                    disabled={Object.keys(cart).length === 0}\n                    icon='trash alternate'\n                    negative\n                    onClick={() => dispatch(emptyCart())}\n                />\n                <Button\n                    content='Place order'\n                    disabled={Object.keys(cart).length === 0}\n                    icon='share square'\n                    onClick={handlePlaceOrder}\n                    primary\n                />\n            </Button.Group>\n\n            {orderModal()}\n        </>\n    );\n}","import {Message, Placeholder, Table} from \"semantic-ui-react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {fetchAllOrders, orderSelectors, orderStatusToText, selectOrdersSlice} from \"./ordersSlice\";\nimport {Link, useLocation} from \"react-router-dom\";\nimport {fetchAllProducts, productSelectors, selectProductsSlice} from \"../products/productsSlice\";\nimport {useEffect} from \"react\";\nimport Loading from \"../../app/Loading\";\nimport {truncate} from \"lodash/string\";\n\nfunction OrderRow({order}) {\n    const location = useLocation();\n    const dispatch = useDispatch();\n    const productsById = useSelector(state => productSelectors.selectEntities(state));\n    const loading = useSelector(state => selectProductsSlice(state).loading);\n    const loadError = useSelector(state => selectProductsSlice(state).error);\n\n    useEffect(() => {\n        dispatch(fetchAllProducts());\n    }, [dispatch]);\n\n    function orderContents() {\n        if (loading) {\n            return (\n                <Placeholder fluid>\n                    <Placeholder.Line/>\n                    <Placeholder.Line/>\n                </Placeholder>\n            );\n        }\n\n        if (loadError) {\n            return <Message error content={loadError}/>\n        }\n\n        const truncatedNames = Object.keys(order.products).map(productId => {\n            const product = productsById[parseInt(productId)];\n            if (product) {\n                return truncate(product.name, {length: 20});\n            }\n            return '';\n        });\n\n        return truncatedNames.join(', ');\n    }\n\n    const orderUrl = `${location.pathname}/${order.id}`;\n\n    return (\n        <Table.Row>\n            <Table.Cell>{order.date}</Table.Cell>\n            <Table.Cell>{orderStatusToText(order.status)}</Table.Cell>\n            <Table.Cell>\n                <Link to={orderUrl}>{order.id}</Link>\n            </Table.Cell>\n            <Table.Cell>\n                {orderContents()}\n            </Table.Cell>\n        </Table.Row>\n    );\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default () => {\n    const dispatch = useDispatch();\n    const orders = useSelector(state => orderSelectors.selectAll(state));\n    const loading = useSelector(state => selectOrdersSlice(state).loading);\n    const loadError = useSelector(state => selectOrdersSlice(state).error);\n\n    useEffect(() => {\n        dispatch(fetchAllOrders());\n    }, [dispatch]);\n\n    if (loading) {\n        return <Loading what='orders'/>;\n    }\n\n    if (loadError) {\n        return <Message error content={loadError}/>\n    }\n\n    if (orders) {\n        if (orders.length === 0) {\n            return (\n                <Message success>You have no orders.</Message>\n            );\n        }\n        return (\n            <>\n                <Table striped>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell width={2}>Date</Table.HeaderCell>\n                            <Table.HeaderCell width={3}>Status</Table.HeaderCell>\n                            <Table.HeaderCell width={5}>ID</Table.HeaderCell>\n                            <Table.HeaderCell width={6}>Contents</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        {orders.map(order => (\n                            <OrderRow key={order.id} order={order}/>\n                        ))}\n                    </Table.Body>\n                </Table>\n            </>\n        );\n    }\n\n    return null;\n}","import {Link, useHistory, useRouteMatch} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {cancelOrder, fetchAllOrders, orderSelectors, orderStatusToText, selectOrdersSlice} from \"./ordersSlice\";\nimport {Button, Grid, Image, Message, Placeholder, Table} from \"semantic-ui-react\";\nimport {fetchAllProducts, modifyInventory, productSelectors, selectProductsSlice} from \"../products/productsSlice\";\nimport {productImageSrc} from \"../../app/productUtils\";\nimport {currency} from \"../../app/numberFormats\";\nimport {useEffect, useState} from \"react\";\nimport Loading from \"../../app/Loading\";\n\nfunction OrderProductRow({order, productId}) {\n    const dispatch = useDispatch();\n    const product = useSelector(state => productSelectors.selectById(state, productId));\n    const loading = useSelector(state => selectProductsSlice(state).loading);\n    const loadError = useSelector(state => selectProductsSlice(state).error);\n\n    useEffect(() => {\n        dispatch(fetchAllProducts());\n    });\n\n    function productName() {\n        if (loading) {\n            return (\n                <Placeholder fluid>\n                    <Placeholder.Line/>\n                </Placeholder>\n            );\n        }\n        if (loadError) {\n            return <Message error content={loadError}/>\n        }\n        if (product) {\n            return product.name;\n        }\n    }\n\n    return (\n        <Table.Row>\n            <Table.Cell>\n                <Link to={`/products/${productId}`}>\n                    <Image size='tiny' inline src={productImageSrc(productId)}/>\n                    &nbsp;\n                    {productName()}\n                </Link>\n            </Table.Cell>\n            <Table.Cell>{order.products[productId].quantity}</Table.Cell>\n            <Table.Cell>\n                <span className='price'>{currency.format(order.products[productId].unitPrice)}</span>\n            </Table.Cell>\n        </Table.Row>\n    );\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default () => {\n    const dispatch = useDispatch();\n    const match = useRouteMatch();\n    const history = useHistory();\n    const [totalPrice, setTotalPrice] = useState(0.0);\n    const order = useSelector(state => orderSelectors.selectById(state, match.params.orderId));\n    const loading = useSelector(state => selectOrdersSlice(state).loading);\n    const loadError = useSelector(state => selectOrdersSlice(state).error);\n\n    useEffect(() => {\n        dispatch(fetchAllOrders());\n    });\n\n    useEffect(() => {\n        if (order && order.products) {\n            const productIds = Object.keys(order.products);\n            if (productIds && productIds.length) {\n                setTotalPrice(productIds.reduce((total, productId) => {\n                    const product = order.products[productId];\n                    return total + product.quantity * product.unitPrice;\n                }, 0.0));\n            }\n        }\n    }, [order]);\n\n    function reStockOrder() {\n        Object.keys(order.products).forEach(productId => {\n            dispatch(modifyInventory({\n                productId: parseInt(productId),\n                quantity: order.products[productId].quantity,\n            }))\n        });\n    }\n\n    function handleCancel() {\n        dispatch(cancelOrder(order.id));\n        reStockOrder();\n        history.replace('/orders');\n    }\n\n    if (loading) {\n        return <Loading what='order'/>;\n    }\n\n    if (loadError) {\n        return <Message error content={loadError}/>;\n    }\n\n    if (order) {\n        return (\n            <Grid celled container>\n                <Grid.Row>\n                    <Grid.Column width={6}>\n                        Order id: <b>{order.id}</b>\n                    </Grid.Column>\n                    <Grid.Column width={4}>\n                        Order date: {order.date}\n                    </Grid.Column>\n                    <Grid.Column width={6}>\n                        Order status: {orderStatusToText(order.status)}\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                    <Grid.Column width={16}>\n                        <Table striped>\n                            <Table.Header>\n                                <Table.Row>\n                                    <Table.HeaderCell width={10}>Product</Table.HeaderCell>\n                                    <Table.HeaderCell width={3}>Quantity</Table.HeaderCell>\n                                    <Table.HeaderCell width={3}>Unit Price</Table.HeaderCell>\n                                </Table.Row>\n                            </Table.Header>\n                            <Table.Body>\n                                {Object.keys(order.products).map(productId => (\n                                    <OrderProductRow\n                                        key={productId}\n                                        order={order}\n                                        productId={productId}\n                                    />\n                                ))}\n                            </Table.Body>\n                        </Table>\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                    <Grid.Column width={10}>\n                        Order total:&nbsp;\n                        <b><span className='price'>{currency.format(totalPrice)}</span></b>\n                    </Grid.Column>\n                    <Grid.Column width={6}>\n                        <Button.Group fluid>\n                            <Button icon='arrow alternate circle left outline' content='All orders'\n                                    as={Link}\n                                    to='/orders'/>\n                            <Button\n                                icon='trash alternate'\n                                negative\n                                onClick={() => handleCancel(order.id)} content='Cancel order'\n                            />\n                        </Button.Group>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        );\n    }\n\n    return null;\n};","import React from 'react';\nimport './App.css';\nimport {Container} from \"semantic-ui-react\";\nimport Navbar from \"./app/Navbar\";\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport MainContent from \"./app/MainContent\";\nimport ProductDetails from \"./features/products/ProductDetails\";\nimport ProductList from \"./features/products/ProductList\";\nimport Cart from \"./features/cart/Cart\";\nimport Orders from \"./features/orders/Orders\";\nimport OrderDetails from \"./features/orders/OrderDetails\";\n\nexport default function App() {\n    return (\n        <Container>\n            <Navbar/>\n            <Switch>\n                <Route path='/orders/:orderId'>\n                    <OrderDetails/>\n                </Route>\n                <Route path='/orders'>\n                    <Orders/>\n                </Route>\n                <Route path='/cart'>\n                    <Cart/>\n                </Route>\n                <Route path='/main'>\n                    <MainContent/>\n                </Route>\n                <Route path='/products/:productId'>\n                    <ProductDetails/>\n                </Route>\n                <Route path='/products'>\n                    <ProductList/>\n                </Route>\n                <Route path='/'>\n                    <Redirect to='/main'/>\n                </Route>\n            </Switch>\n        </Container>\n    );\n}","import {configureStore} from '@reduxjs/toolkit';\nimport productsReducer, {productsSlice} from \"../features/products/productsSlice\";\nimport ordersReducer, {ordersSlice} from \"../features/orders/ordersSlice\";\nimport cartReducer, {cartSlice} from \"../features/cart/cartSlice\";\n\nexport default configureStore({\n    reducer: {\n        [productsSlice.name]: productsReducer,\n        [ordersSlice.name]: ordersReducer,\n        [cartSlice.name]: cartReducer,\n    },\n});","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'semantic-ui-css/semantic.min.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport {Provider} from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter as Router} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Router>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </Router>\r\n    </React.StrictMode>\r\n    ,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}