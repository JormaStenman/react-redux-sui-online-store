{"version":3,"sources":["serviceWorker.js","app/client.js","features/products/productsSlice.js","features/orders/ordersSlice.js","features/cart/cartSlice.js","app/store.js","app/Navbar.js","app/ClearButton.js","app/MainContent.js","app/productUtils.js","app/numberFormats.js","app/StoreModal.js","app/Loading.js","features/products/ProductDetails.js","features/products/ProductList.js","features/cart/Cart.js","features/orders/Orders.js","features/orders/OrderDetails.js","App.js","WrappedApp.js","index.js"],"names":["Boolean","window","location","hostname","match","storage","localStorage","ordersKey","productsKey","promiseToReturn","resultFunc","removeItem","newOrder","id","uuid","order","date","Date","toISOString","substr","createdAt","now","orders","loadOrders","storeOrders","orderId","deleted","Object","values","products","loadProducts","product","Error","update","storeProducts","updated","maxDelay","errorProb","Promise","resolve","reject","setTimeout","error","random","toFixed","getError","result","e","JSON","parse","getItem","setItem","stringify","item","productsById","initialProducts","reduce","initProducts","entityAdapter","createEntityAdapter","sortComparer","a","b","name","localeCompare","productsSliceName","selectProductsSlice","state","productSelectors","getSelectors","fetchAllProducts","createAsyncThunk","_","client","condition","getState","productsState","selectTotal","loading","modifyInventory","productId","quantity","inventory","clearProducts","productsSlice","createSlice","initialState","getInitialState","clearing","reducers","extraReducers","builder","addCase","fulfilled","action","setAll","payload","rejected","removeAll","upsertOne","pending","addMatcher","type","endsWith","message","OrderStatus","orderStatusToText","orderStatus","ordersSliceName","selectOrdersSlice","orderSelectors","fetchAllOrders","ordersState","createOrder","cancelOrder","clearOrders","ordersSlice","latestOrder","addOne","removeOne","cartSlice","addToCart","setQuantity","newQuantity","emptyCart","actions","selectCartSlice","configureStore","reducer","productsReducer","ordersReducer","cartReducer","numItems","useSelector","keys","length","selectNumberOfItemsInCart","Container","Menu","stackable","borderless","NavbarItem","path","position","Icon","Label","circular","data-testid","children","useLocation","Item","active","pathname","as","Link","to","replace","dispatch","useDispatch","productsClearing","ordersClearing","useState","clearButtonDisabled","setClearButtonDisabled","trigger","Button","Group","negative","icon","content","onClick","disabled","Segment","basic","compact","Popup","on","style","marginTop","ClearButton","Header","dividing","List","bulleted","relaxed","marginBottom","href","productImageSrc","process","currency","Intl","NumberFormat","render","modalOpen","setModalOpen","timeout","useEffect","timeoutID","clearTimeout","Modal","closeIcon","onClose","open","Loading","what","Loader","useRouteMatch","selectById","params","loadError","addModalOpen","setAddModalOpen","Card","centered","fluid","Grid","container","Row","Column","className","width","Image","size","inline","src","textAlign","Content","Meta","format","price","Description","details","extra","primary","StoreModal","Message","selectAll","divided","map","loc","currentLoc","alt","truncate","Extra","ProductRow","parseInt","handleQuantityChange","evt","target","value","Table","Cell","Input","label","title","min","max","defaultValue","isNaN","onChange","CartTotal","cart","selectEntities","cartTotal","total","inCart","orderModalOpen","setOrderModalOpen","selectLatestOrder","striped","HeaderCell","Body","Footer","colSpan","remaining","unitPrice","status","Inline","OrderRow","orderUrl","Placeholder","Line","join","success","OrderProductRow","history","useHistory","totalPrice","setTotalPrice","handleCancel","forEach","productIds","celled","App","Navbar","OrderDetails","Orders","Cart","MainContent","ProductDetails","ProductList","store","ReactDOM","WrappedApp","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6f9fdf17.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import initialProducts from '../data/products.json';\nimport {random} from 'lodash/number'\nimport {v4 as uuid} from 'uuid';\n\nconst storage = window.localStorage;\n\n// noinspection SpellCheckingInspection\nconst ordersKey = 'me.stenman.orders';\n\n// noinspection SpellCheckingInspection\nconst productsKey = 'me.stenman.products';\n\nexport const getProductById = id => {\n    return promiseToReturn({\n        resultFunc: () => {\n            const products = loadProducts();\n            if (id in products) {\n                return {\n                    product: products[id],\n                }\n            }\n            throw new Error(`no product found matching id ${id}`);\n        },\n    });\n};\n\nexport const getProductsByIds = ids => {\n    return promiseToReturn({\n        resultFunc: () => {\n            const idSet = new Set(ids);\n            const products = loadProducts();\n            const requestedProducts = idSet.keys().reduce((ary, productId) => {\n                if (products[productId]) {\n                    ary.push(products[productId]);\n                }\n                return ary;\n            }, []);\n            return {\n                products: requestedProducts,\n            };\n        },\n    });\n};\n\nexport const getAllProducts = () => {\n    return promiseToReturn({\n        resultFunc: () => ({\n            products: Object.values(loadProducts())\n        }),\n    });\n};\n\nexport const updateProduct = update => {\n    return promiseToReturn({\n        resultFunc: () => {\n            const products = loadProducts();\n            if (update.id in products) {\n                products[update.id] = {\n                    ...products[update.id],\n                    ...update,\n                };\n                storeProducts(products);\n                return {\n                    updated: products[update.id],\n                };\n            }\n            throw new Error(`No product found with id ${update.id}.`);\n        },\n    });\n};\n\nexport const getAllOrders = () => {\n    return promiseToReturn({\n        resultFunc: () => ({\n            orders: Object.values(loadOrders())\n        }),\n    });\n};\n\nexport const createOrder = newOrder => {\n    return promiseToReturn({\n        resultFunc: () => {\n            const id = uuid();\n            const order = {\n                ...newOrder,\n                id,\n                date: new Date().toISOString().substr(0, 10),\n                createdAt: Date.now(),\n            };\n            const orders = loadOrders();\n            orders[id] = order;\n            storeOrders(orders);\n            return {\n                order,\n            }\n        },\n    });\n};\n\nexport const deleteOrder = orderId => {\n    return promiseToReturn({\n        resultFunc: () => {\n            const orders = loadOrders();\n            delete orders[orderId]\n            storeOrders(orders);\n            return {\n                deleted: orderId,\n            }\n        },\n    });\n};\n\nconst clearOrders = () => promiseToReturn({\n    resultFunc: () => {\n        storage.removeItem(ordersKey);\n    },\n});\n\nconst clearProducts = () => promiseToReturn({\n    resultFunc: () => {\n        storage.removeItem(productsKey);\n    },\n});\n\nexport const hasDataInStorage = () => storage.getItem(ordersKey) !== null || storage.getItem(productsKey) !== null;\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n    clearOrders,\n    clearProducts,\n    createOrder,\n    deleteOrder,\n    getAllOrders,\n    getAllProducts,\n    getProductById,\n    getProductsByIds,\n    updateProduct,\n};\n\nfunction getError(errorProb) {\n    if (random(1, true) <= errorProb) {\n        return `A fake API error occurred. Error probability\n        ${(errorProb * 100).toFixed()}% is adjustable in client.js.`;\n    }\n    return null;\n}\n\nfunction promiseToReturn({resultFunc = () => undefined, maxDelay = 2000, errorProb = 0.0}) {\n    return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                    const error = getError(errorProb);\n                    if (error) {\n                        reject(new Error(error))\n                    } else {\n                        let result;\n                        try {\n                            result = resultFunc();\n                        } catch (e) {\n                            reject(e);\n                        }\n                        resolve(result);\n                    }\n                },\n                random(maxDelay)\n            );\n        }\n    );\n}\n\nfunction loadOrders() {\n    return JSON.parse(storage.getItem(ordersKey) || '{}');\n}\n\nfunction storeOrders(orders) {\n    storage.setItem(ordersKey, JSON.stringify(orders));\n}\n\nfunction initProducts() {\n    const productsById = initialProducts.reduce((productsById, product) => {\n        productsById[product.id] = product;\n        return productsById;\n    }, {});\n    storeProducts(productsById);\n    return productsById;\n}\n\nfunction loadProducts() {\n    const item = storage.getItem(productsKey);\n    return item ? JSON.parse(item) : initProducts();\n}\n\nfunction storeProducts(products) {\n    storage.setItem(productsKey, JSON.stringify(products));\n}","import {createAsyncThunk, createEntityAdapter, createSlice} from \"@reduxjs/toolkit\";\nimport client from \"../../app/client\";\n\nconst entityAdapter = createEntityAdapter({\n    sortComparer: (a, b) => a.name.localeCompare(b.name),\n});\n\nconst productsSliceName = 'products';\n\nexport const selectProductsSlice = state => state[productsSliceName];\n\nexport const productSelectors = entityAdapter.getSelectors(state => selectProductsSlice(state));\n\nexport const fetchAllProducts = createAsyncThunk(\n    'products/fetchAllProducts',\n    async (_) => {\n        return await client.getAllProducts();\n    },\n    {\n        condition: (_, {getState}) => {\n            const productsState = selectProductsSlice(getState());\n            const total = entityAdapter.getSelectors().selectTotal(productsState);\n            return total === 0 && !productsState.loading;\n        },\n    }\n);\n\nexport const modifyInventory = createAsyncThunk(\n    'products/modifyInventory',\n    async ({productId, quantity}) => {\n        let {product: {id, inventory}} = await client.getProductById(productId);\n        inventory += quantity;\n        return client.updateProduct({\n            id,\n            inventory,\n        });\n    },\n);\n\nexport const clearProducts = createAsyncThunk(\n    'products/clearProducts',\n    async () => {\n        return client.clearProducts();\n    }\n);\n\nexport const productsSlice = createSlice({\n    name: productsSliceName,\n    initialState: entityAdapter.getInitialState({\n        loading: false,\n        error: null,\n        clearing: false,\n    }),\n    reducers: {},\n    extraReducers: builder => {\n        builder\n            .addCase(fetchAllProducts.fulfilled, (state, action) => {\n                entityAdapter.setAll(state, action.payload.products);\n            })\n            .addCase(fetchAllProducts.rejected, state => {\n                entityAdapter.removeAll(state);\n            })\n            .addCase(modifyInventory.fulfilled, (state, action) => {\n                entityAdapter.upsertOne(state, action.payload.updated);\n            })\n            .addCase(clearProducts.rejected, state => {\n                state.clearing = false;\n            })\n            .addCase(clearProducts.pending, state => {\n                state.clearing = true;\n            })\n            .addCase(clearProducts.fulfilled, state => {\n                entityAdapter.removeAll(state);\n                state.clearing = false;\n            })\n            .addMatcher(action => action.type.endsWith('/pending'), state => {\n                state.loading = true;\n                state.error = null;\n            })\n            .addMatcher(action => action.type.endsWith('/fulfilled'), state => {\n                state.loading = false;\n                state.error = null;\n            })\n            .addMatcher(action => action.type.endsWith('/rejected'), (state, action) => {\n                state.loading = false;\n                state.error = action.error.message;\n            })\n        ;\n    },\n});\n\nexport default productsSlice.reducer;","import {createAsyncThunk, createEntityAdapter, createSlice} from \"@reduxjs/toolkit\";\nimport client from \"../../app/client\";\n\nexport const OrderStatus = {\n    ordered: 'ordered',\n    waitingForProducts: 'waitingForProducts',\n};\n\nexport function orderStatusToText(orderStatus) {\n    switch (orderStatus) {\n        case OrderStatus.ordered:\n            return 'ordered';\n        case OrderStatus.waitingForProducts:\n            return 'waiting for products';\n        default:\n            return '';\n    }\n}\n\nconst entityAdapter = createEntityAdapter({\n    sortComparer: (a, b) => b.createdAt - a.createdAt,\n});\n\nconst ordersSliceName = 'orders';\n\nexport const selectOrdersSlice = state => state[ordersSliceName];\n\nexport const selectLatestOrder = state => selectOrdersSlice(state).latestOrder;\n\nexport const orderSelectors = entityAdapter.getSelectors(state => selectOrdersSlice(state));\n\nexport const fetchAllOrders = createAsyncThunk(\n    'orders/fetchAllOrders',\n    async (_) => {\n        return client.getAllOrders();\n    },\n    {\n        condition: (_, {getState}) => {\n            const ordersState = selectOrdersSlice(getState());\n            const total = entityAdapter.getSelectors().selectTotal(ordersState);\n            return total === 0 && !ordersState.loading;\n        },\n    },\n);\n\nexport const createOrder = createAsyncThunk(\n    'orders/createOrder',\n    async newOrder => {\n        return client.createOrder(newOrder);\n    },\n);\n\nexport const cancelOrder = createAsyncThunk(\n    'orders/cancelOrder',\n    async orderId => {\n        return client.deleteOrder(orderId);\n    },\n);\n\nexport const clearOrders = createAsyncThunk(\n    'orders/clearOrders',\n    async () => {\n        return client.clearOrders();\n    },\n);\n\nexport const ordersSlice = createSlice({\n    name: ordersSliceName,\n    initialState: entityAdapter.getInitialState({\n        loading: false,\n        error: null,\n        latestOrder: null,\n        clearing: false,\n    }),\n    reducers: {},\n    extraReducers: builder => {\n        builder\n            .addCase(fetchAllOrders.fulfilled, (state, action) => {\n                entityAdapter.setAll(state, action.payload.orders);\n            })\n            .addCase(fetchAllOrders.rejected, state => {\n                entityAdapter.removeAll(state);\n            })\n            .addCase(createOrder.pending, state => {\n                state.latestOrder = null;\n            })\n            .addCase(createOrder.fulfilled, (state, action) => {\n                state.latestOrder = action.payload.order;\n                entityAdapter.addOne(state, action.payload.order);\n            })\n            .addCase(cancelOrder.fulfilled, (state, action) => {\n                entityAdapter.removeOne(state, action.payload.deleted);\n            })\n            .addCase(clearOrders.pending, state => {\n                state.clearing = true;\n            })\n            .addCase(clearOrders.rejected, state => {\n                state.clearing = false;\n            })\n            .addCase(clearOrders.fulfilled, (state) => {\n                entityAdapter.removeAll(state);\n                state.clearing = false;\n            })\n            .addMatcher(action => action.type.endsWith('/pending'), state => {\n                state.loading = true;\n                state.error = null;\n            })\n            .addMatcher(action => action.type.endsWith('/fulfilled'), state => {\n                state.loading = false;\n                state.error = null;\n            })\n            .addMatcher(action => action.type.endsWith('/rejected'), (state, action) => {\n                state.loading = false;\n                state.error = action.error.message;\n            })\n        ;\n    },\n});\n\nexport default ordersSlice.reducer;","import {createSlice} from \"@reduxjs/toolkit\";\n\nexport const cartSlice = createSlice({\n    name: 'cart',\n    initialState: {},\n    reducers: {\n        addToCart: (state, action) => {\n            const productId = action.payload;\n            state[productId] |= 0;\n            state[productId]++;\n        },\n        setQuantity: (state, action) => {\n            const {productId, newQuantity} = action.payload;\n            state[productId] = newQuantity;\n            if (state[productId] <= 0) {\n                delete state[productId];\n            }\n        },\n        emptyCart: _ => ({}),\n    },\n});\n\nexport const {addToCart, emptyCart, setQuantity,} = cartSlice.actions;\n\nexport const selectCartSlice = state => state[cartSlice.name];\n\nexport const selectNumberOfItemsInCart = state => Object.keys(selectCartSlice(state)).length;\n\nexport default cartSlice.reducer;","import {configureStore} from '@reduxjs/toolkit';\nimport productsReducer, {productsSlice} from \"../features/products/productsSlice\";\nimport ordersReducer, {ordersSlice} from \"../features/orders/ordersSlice\";\nimport cartReducer, {cartSlice} from \"../features/cart/cartSlice\";\n\nexport default configureStore({\n    reducer: {\n        [productsSlice.name]: productsReducer,\n        [ordersSlice.name]: ordersReducer,\n        [cartSlice.name]: cartReducer,\n    },\n});","import {Container, Icon, Label, Menu} from \"semantic-ui-react\";\nimport {Link, useLocation} from \"react-router-dom\";\nimport {useSelector} from \"react-redux\";\nimport {selectNumberOfItemsInCart} from \"../features/cart/cartSlice\";\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default () => {\n    const numItems = useSelector(state => selectNumberOfItemsInCart(state));\n    return (\n        <Container>\n            <Menu stackable borderless>\n                <NavbarItem path='/main'>Main</NavbarItem>\n                <NavbarItem path='/products'>Products</NavbarItem>\n                <Menu.Menu position='right'>\n                    <NavbarItem path='/orders'>\n                        My Orders\n                    </NavbarItem>\n                    <NavbarItem path='/cart'>\n                        <Icon name='shopping cart'/>Shopping cart\n                        {numItems ? <Label circular data-testid='cart-numitems'>{numItems}</Label> : null}\n                    </NavbarItem>\n                </Menu.Menu>\n            </Menu>\n        </Container>\n    );\n}\n\nfunction NavbarItem({path, children}) {\n    const location = useLocation();\n    return (\n        <Menu.Item active={location.pathname === path} as={Link} to={path} replace>\n            {children}\n        </Menu.Item>\n    );\n}","import {useDispatch, useSelector} from \"react-redux\";\nimport {clearProducts, selectProductsSlice} from \"../features/products/productsSlice\";\nimport {clearOrders, selectOrdersSlice} from \"../features/orders/ordersSlice\";\nimport React, {useState} from \"react\";\nimport {hasDataInStorage} from \"./client\";\nimport {Button, Popup, Segment} from \"semantic-ui-react\";\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default () => {\n    const dispatch = useDispatch();\n    const productsClearing = useSelector(state => selectProductsSlice(state).clearing);\n    const ordersClearing = useSelector(state => selectOrdersSlice(state).clearing);\n    const [clearButtonDisabled, setClearButtonDisabled] = useState(!hasDataInStorage());\n\n    function isClearing() {\n        return productsClearing || ordersClearing;\n    }\n\n    function handleClear() {\n        setClearButtonDisabled(true);\n        // Handle local storage clearing through Redux, so that both states will match.\n        dispatch(clearOrders());\n        dispatch(clearProducts());\n    }\n\n    const trigger = (\n        // If the button isn't wrapped in anything, and happens to be disabled,\n        // the Popup tooltip won't show.\n        <Button.Group>\n            <Button\n                negative\n                icon='trash alternate'\n                content='Clear local storage area'\n                onClick={() => handleClear()}\n                disabled={clearButtonDisabled}\n                loading={isClearing()}\n            />\n        </Button.Group>\n    );\n\n    const content = clearButtonDisabled ? (\n        <Segment basic compact>\n            <p>No data in this application's local storage area.</p>\n            <p>An easy way to load some is to visit the Products page.</p>\n        </Segment>\n    ) : (\n        <Segment basic compact>\n            <p>Click to remove this application's data from the local storage area.</p>\n        </Segment>\n    );\n\n    return (\n        <Popup\n            content={content}\n            trigger={trigger}\n            on={['hover', 'click']}\n            position='bottom left'\n        />\n    );\n};","import {Container, Header, List} from \"semantic-ui-react\";\nimport React from \"react\";\nimport ClearButton from \"./ClearButton\";\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default () => (\n    <Container style={{marginTop: '2em'}}>\n        <ClearButton/>\n        <Header as='h2' dividing>Demo Online Store</Header>\n        <p>\n            This web application demonstrates the following features usually found in any online store\n            website:\n        </p>\n        <List bulleted relaxed style={{marginTop: '2em', marginBottom: '2em'}}>\n            <List.Item>A list of products can be browsed.</List.Item>\n            <List.Item>The details of any product can be viewed.</List.Item>\n            <List.Item>Products can be added into a shopping cart.</List.Item>\n            <List.Item>The contents of the shopping cart can be manipulated before ordering.</List.Item>\n            <List.Item>The list of orders can be viewed.</List.Item>\n            <List.Item>The details of any order can be viewed.</List.Item>\n            <List.Item>An order can be cancelled.</List.Item>\n            <List.Item>Product inventories change when orders are placed or cancelled.</List.Item>\n            <List.Item>A navigation bar is always visible at the top of the page.</List.Item>\n        </List>\n        <p>\n            The application's source code lives <a\n            href='https://github.com/JormaStenman/react-redux-sui-online-store'>here</a>.\n        </p>\n        <Header as='h2' dividing>Implementation aspects</Header>\n        <p>\n            A few implementation details worth mentioning:\n        </p>\n        <List bulleted relaxed style={{marginTop: '2em', marginBottom: '2em'}}>\n            <List.Item>\n                This application is an implementation of <a\n                href='https://github.com/florinpop17/app-ideas/blob/master/Projects/2-Intermediate/Simple-Online-Store.md'>\n                this app-idea</a>.\n            </List.Item>\n            <List.Item>\n                The application is a <a href='https://en.wikipedia.org/wiki/Single-page_application'>Single\n                Page Application</a> working entirely inside the browser.\n            </List.Item>\n            <List.Item>\n                The application currently has no database integration. Instead, it stores all product and order data\n                in <a href='https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage'>the local\n                storage area</a> of the user's browser. There's a button to explicitly clear this application's\n                local storage area at the top of this page.\n            </List.Item>\n            <List.Item>\n                A client library, which simulates asynchronous client-server communication using <a\n                href='https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise'>Promises</a>,\n                is used between the app state and the actual storage area.\n            </List.Item>\n        </List>\n        <Header as='h2' dividing>Implementation techniques</Header>\n        <p>\n            The application utilizes the following techniques and libraries:\n        </p>\n        <List bulleted relaxed style={{marginTop: '2em', marginBottom: '2em'}}>\n            <List.Item>\n                All code is <a href='https://www.w3schools.com/Js/js_2018.asp'>ECMAScript 2018</a>.\n            </List.Item>\n            <List.Item>\n                The initial project structure was created using <a\n                href='https://create-react-app.dev'>Create React App</a> with <a\n                href='https://www.npmjs.com/package/cra-template-redux'>the Redux template</a>.\n            </List.Item>\n            <List.Item>\n                All components are <a href='https://reactjs.org/docs/components-and-props.html'>React Function\n                Components</a>.\n            </List.Item>\n            <List.Item>\n                Application state is managed using <a href='https://reactjs.org/docs/hooks-intro.html'>React\n                Hooks</a> and <a href='https://redux-toolkit.js.org'>Redux Toolkit</a>.\n            </List.Item>\n            <List.Item>\n                Navigation within the application is managed by <a href='https://reactrouter.com'>React Router</a>.\n            </List.Item>\n            <List.Item>\n                UI components come from <a href='https://react.semantic-ui.com'>Semantic UI React</a>\n            </List.Item>\n            <List.Item>\n                Some utility functions from <a href='https://lodash.com'>Lodash</a> are used.\n            </List.Item>\n            <List.Item>\n                Unit tests were written using <a href='https://jestjs.io'>Jest</a> and <a\n                href='https://testing-library.com/docs/react-testing-library/intro/'>React Testing Library</a>.\n            </List.Item>\n        </List>\n        <Header as='h2' dividing>What next?</Header>\n        <p>\n            The app is pretty basic in its current state. Here are some ideas of what to add\n            next:\n        </p>\n        <List bulleted relaxed style={{marginTop: '2em', marginBottom: '2em'}}>\n            <List.Item>\n                As the main purpose of developing this app was to explore <a\n                href='https://reactjs.org'>React</a> and related technologies, and time was limited, the unit tests are\n                not as comprehensive as they could be.\n            </List.Item>\n            <List.Item>\n                There's no login/logout functionality for users.\n            </List.Item>\n            <List.Item>\n                Could use a real database with a backend service.\n            </List.Item>\n            <List.Item>\n                The app only speaks English. It could do with some l10n love.\n            </List.Item>\n            <List.Item>\n                Neither the products nor the orders listings are paged.\n            </List.Item>\n        </List>\n        <Header as='h2' dividing>Image credits</Header>\n        <p>\n            The images used in this app were downloaded from <a href='https://creativecommons.org'>the Creative\n            Commons website</a>. Here are the credits to their creators:\n        </p>\n        <List bulleted relaxed style={{marginTop: '2em', marginBottom: '2em'}}>\n            <List.Item>\n                \"Fruit salad\" by lisaclarke is licensed with CC BY-ND 2.0. To view a copy of this license, visit\n                &nbsp;<a\n                href='https://creativecommons.org/licenses/by-nd/2.0/'>https://creativecommons.org/licenses/by-nd/2.0/</a>\n            </List.Item>\n            <List.Item>\n                \"Fruit Veggie Art\" by NicoleMariePhotoworks is licensed with CC BY 2.0. To view a copy of this\n                license, visit <a\n                href='https://creativecommons.org/licenses/by/2.0/'>https://creativecommons.org/licenses/by/2.0/</a>\n            </List.Item>\n            <List.Item>\n                \"Fruit for a crisp\" by lisaclarke is licensed under CC BY-ND 2.0\n            </List.Item>\n            <List.Item>\n                \"Fruits on a plate (testing iPhone 6+)\" by Sergey Galyonkin is licensed under CC BY-SA 2.0\n            </List.Item>\n            <List.Item>\n                \"#napoli #market #antignano #frutta #fruits #clementine\" by Antonio Manfredonio is licensed under CC\n                BY-SA 2.0\n            </List.Item>\n            <List.Item>\n                \"strawberries\" by seelensturm is licensed under CC BY 2.0\n            </List.Item>\n            <List.Item>\n                \"File:Grapes Emoji.png\" by EmmanuelCordoliani is licensed under CC BY-SA 4.0\n            </List.Item>\n        </List>\n    </Container>\n)","export function productImageSrc(productId) {\n    return `${process.env.PUBLIC_URL}/product_pics/${productId}.jpeg`;\n}\n\nconst utils = {\n    imageSrc: productImageSrc,\n};\n\nexport default utils;","export const currency = new Intl.NumberFormat('fi-FI', {\n    style: 'currency',\n    currency: 'EUR',\n});\nconst numberFormats = {\n    currency,\n};\nexport default numberFormats;","import {useEffect} from \"react\";\nimport {Modal} from \"semantic-ui-react\";\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default ({render, modalOpen, setModalOpen, timeout}) => {\n    useEffect(() => {\n        let timeoutID = null;\n        if (timeout) {\n            timeoutID = setTimeout(() => setModalOpen(false), timeout);\n        }\n        return () => timeoutID && clearTimeout(timeoutID);\n    });\n\n    return (\n        <Modal\n            closeIcon\n            onClose={() => setModalOpen(false)}\n            open={modalOpen}\n        >\n            {render()}\n        </Modal>\n    );\n};","import {Loader} from \"semantic-ui-react\";\n\nexport default function Loading({what}) {\n    return (\n        <Loader active content={`Loading ${what}...`}/>\n    );\n}","import {Button, Card, Container, Grid, Image, Message, Modal} from \"semantic-ui-react\";\nimport {Link, useRouteMatch} from \"react-router-dom\";\nimport {productImageSrc} from \"../../app/productUtils\";\nimport {currency} from \"../../app/numberFormats\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {fetchAllProducts, productSelectors, selectProductsSlice} from \"./productsSlice\";\nimport {useEffect, useState} from \"react\";\nimport {addToCart} from \"../cart/cartSlice\";\nimport StoreModal from \"../../app/StoreModal\";\nimport Loading from \"../../app/Loading\";\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default () => {\n    const match = useRouteMatch();\n    const product = useSelector(state => productSelectors.selectById(state, match.params.productId));\n    const loading = useSelector(state => selectProductsSlice(state).loading);\n    const loadError = useSelector(state => selectProductsSlice(state).error);\n    const dispatch = useDispatch();\n    const [addModalOpen, setAddModalOpen] = useState(false);\n\n    useEffect(() => {\n        dispatch(fetchAllProducts());\n    }, [dispatch]);\n\n    function handleAddClick(productId) {\n        dispatch(addToCart(productId));\n        setAddModalOpen(true);\n    }\n\n    if (product) {\n        return (\n            <Container>\n                <Card centered fluid>\n                    <Grid stackable container>\n                        <Grid.Row>\n                            <Grid.Column>\n                                <Card.Header>\n                                    <span className='meta'>{product.id}</span>\n                                    <span>&nbsp;</span>\n                                    <span>{product.name}</span>\n                                </Card.Header>\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <Grid.Column width='3'>\n                                <Image size='small' inline src={productImageSrc(product.id)}/>\n                            </Grid.Column>\n                            <Grid.Column width='13' textAlign='justified'>\n                                <Card.Content>\n                                    <Card.Meta>\n                                        <span className='price'>{currency.format(product.price || 0)}</span>\n                                    </Card.Meta>\n                                    <Card.Description>\n                                        {product.details}\n                                    </Card.Description>\n                                </Card.Content>\n                                <Card.Content extra>\n                                    <Card.Meta>\n                                        <span>In stock: {product.inventory}</span>\n                                    </Card.Meta>\n                                </Card.Content>\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <Grid.Column>\n                                <Button.Group>\n                                    <Button icon='arrow alternate circle left outline' content='See more products'\n                                            as={Link}\n                                            to='/products'/>\n                                    <Button primary icon='add to cart' content='Add to cart'\n                                            onClick={() => handleAddClick(match.params.productId)}/>\n                                </Button.Group>\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n                </Card>\n                <StoreModal\n                    modalOpen={addModalOpen}\n                    setModalOpen={setAddModalOpen}\n                    timeout={5000}\n                    render={() => (\n                        <>\n                            <Modal.Header>\n                                One of \"<i>{product.name}</i>\" added in <Link to='/cart' replace>cart</Link>.\n                            </Modal.Header>\n                            <Modal.Content>\n                                <Image size='tiny' inline src={productImageSrc(product.id)}/>\n                            </Modal.Content>\n                        </>\n                    )}\n                />\n            </Container>\n        );\n    }\n\n    if (loading) {\n        return <Loading what='product'/>;\n    }\n\n    if (loadError) {\n        return <Message error content={loadError}/>\n    }\n\n    return null;\n}","import {Button, Item, Message} from \"semantic-ui-react\";\nimport {currency} from \"../../app/numberFormats\";\nimport {truncate} from \"lodash/string\";\nimport {Link} from \"react-router-dom\";\nimport {productImageSrc} from \"../../app/productUtils\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {fetchAllProducts, productSelectors, selectProductsSlice} from \"./productsSlice\";\nimport {useEffect} from \"react\";\nimport Loading from \"../../app/Loading\";\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default () => {\n\n    const dispatch = useDispatch();\n    const products = useSelector(state => productSelectors.selectAll(state));\n    const loading = useSelector(state => selectProductsSlice(state).loading);\n    const loadError = useSelector(state => selectProductsSlice(state).error);\n\n    useEffect(() => {\n        dispatch(fetchAllProducts());\n    }, [dispatch]);\n\n    function itemLoc(currentLoc, productId) {\n        return {\n            ...currentLoc,\n            pathname: `${currentLoc.pathname}/${productId}`,\n        };\n    }\n\n    if (products && products.length) {\n        return (\n            <Item.Group divided>\n                {products.map(product => (\n                    <Item key={product.id} as={Link} to={loc => itemLoc(loc, product.id)}>\n                        <Item.Image size='tiny' src={productImageSrc(product.id)} alt={`product-id-${product.id}`}/>\n                        <Item.Content>\n                            <Item.Header>{product.name}</Item.Header>\n                            <Item.Meta>\n                                <span className='price'>{currency.format(product.price || 0)}</span>\n                            </Item.Meta>\n                            <Item.Description>\n                                {truncate(product.details, {length: 200})}\n                            </Item.Description>\n                            <Item.Extra>\n                                <Button>Select</Button>\n                            </Item.Extra>\n                        </Item.Content>\n                    </Item>\n                ))}\n            </Item.Group>\n        );\n    }\n\n    if (loading) {\n        return <Loading what='products'/>;\n    }\n\n    if (loadError) {\n        return <Message error content={loadError}/>\n    }\n\n    return null;\n}","import {Button, Input, Modal, Segment, Table} from \"semantic-ui-react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {emptyCart, selectCartSlice, setQuantity} from \"./cartSlice\";\nimport {productSelectors, modifyInventory} from \"../products/productsSlice\";\nimport {currency} from \"../../app/numberFormats\";\nimport {Link} from \"react-router-dom\";\nimport {createOrder, OrderStatus, selectLatestOrder} from \"../orders/ordersSlice\";\nimport {useState} from \"react\";\nimport StoreModal from \"../../app/StoreModal\";\nimport Loading from \"../../app/Loading\";\n\nfunction ProductRow({productId}) {\n    const product = useSelector(state => productSelectors.selectById(state, parseInt(productId)));\n    const quantity = useSelector(state => selectCartSlice(state)[product.id]);\n    const dispatch = useDispatch();\n\n    function handleQuantityChange(evt) {\n        const newQuantity = parseInt(evt.target.value);\n        dispatch(setQuantity({productId: product.id, newQuantity}));\n    }\n\n    if (product) {\n        // noinspection JSUnresolvedVariable\n        return (\n            <Table.Row>\n                <Table.Cell><Link to={`/products/${product.id}`}>{product.id}</Link></Table.Cell>\n                <Table.Cell>{product.name}</Table.Cell>\n                <Table.Cell>{currency.format(product.price || 0)}</Table.Cell>\n                <Table.Cell>\n                    <Input\n                        fluid\n                        label={<Button\n                            icon='remove'\n                            onClick={() => handleQuantityChange({target: {value: 0}})}\n                            title='remove'\n                        />}\n                        type='number'\n                        min={1}\n                        max={product.inventory}\n                        defaultValue={isNaN(quantity) ? 1 : quantity}\n                        onChange={handleQuantityChange}\n                    />\n                </Table.Cell>\n            </Table.Row>\n        );\n    }\n    return null;\n}\n\nfunction CartTotal() {\n    const cart = useSelector(state => selectCartSlice(state));\n    const products = useSelector(state => productSelectors.selectEntities(state));\n    const cartTotal = Object.keys(cart).reduce(\n        (total, productId) => {\n            const inCart = cart[productId];\n            const quantity = isNaN(inCart) ? 0 : inCart;\n            return total + quantity * products[parseInt(productId)].price;\n        }, 0.0\n    );\n    return (\n        <span>Cart total:&nbsp;<strong>{currency.format(cartTotal)}</strong></span>\n    );\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default () => {\n    const cart = useSelector(state => selectCartSlice(state));\n    const dispatch = useDispatch();\n    const products = useSelector(state => productSelectors.selectEntities(state));\n    const [orderModalOpen, setOrderModalOpen] = useState(false);\n    const latestOrder = useSelector(state => selectLatestOrder(state));\n\n    function assembleOrder() {\n        return Object.keys(cart).reduce((order, productId) => {\n            const product = products[parseInt(productId)];\n            const quantity = cart[productId];\n            // noinspection JSUnresolvedVariable\n            const remaining = product.inventory - quantity;\n            if (!order.products[productId]) {\n                order.products[productId] = {\n                    unitPrice: product.price,\n                    quantity,\n                };\n            }\n            if (order.status !== OrderStatus.waitingForProducts) {\n                // any product not in stock will set order status to 'waiting for products'\n                order.status = remaining < 0 ? OrderStatus.waitingForProducts : OrderStatus.ordered;\n            }\n            dispatch(modifyInventory({\n                productId: product.id,\n                quantity: -quantity,\n            }));\n            return order;\n        }, {products: {}});\n    }\n\n    function handlePlaceOrder() {\n        dispatch(createOrder(assembleOrder()));\n        dispatch(emptyCart());\n        setOrderModalOpen(true);\n    }\n\n    function orderModal() {\n        if (latestOrder) {\n            return (\n                <StoreModal\n                    modalOpen={orderModalOpen}\n                    setModalOpen={setOrderModalOpen}\n                    render={() => (\n                        <>\n                            <Modal.Header>\n                                Thank you for your order!\n                            </Modal.Header>\n                            <Modal.Content>\n                                <Segment.Group>\n                                    <Segment.Inline>\n                                        <Link to={`/orders/${latestOrder.id}`} replace>View this order.</Link>\n                                    </Segment.Inline>\n                                    <Segment.Inline>\n                                        You can view all your orders on the <Link to='/orders' replace>Orders\n                                        page</Link>\n                                    </Segment.Inline>\n                                </Segment.Group>\n                            </Modal.Content>\n                        </>\n                    )}\n                />\n            );\n        }\n        if (orderModalOpen) {\n            return <Loading what='order'/>\n        }\n        return null;\n    }\n\n    return (\n        <>\n            <Table striped>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell width='1'>ID</Table.HeaderCell>\n                        <Table.HeaderCell width='10'>Name</Table.HeaderCell>\n                        <Table.HeaderCell width='3'>Unit Price</Table.HeaderCell>\n                        <Table.HeaderCell width='2'>Quantity</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    {Object.keys(cart).map(productId => (\n                        <ProductRow key={productId} productId={productId}/>\n                    ))}\n                </Table.Body>\n                <Table.Footer>\n                    <Table.Row>\n                        <Table.HeaderCell colSpan='4'>\n                            <CartTotal/>\n                        </Table.HeaderCell>\n                    </Table.Row>\n                </Table.Footer>\n            </Table>\n            <Button.Group>\n                <Button\n                    as={Link}\n                    content='See more products'\n                    icon='arrow alternate circle left outline'\n                    to='/products'\n                />\n                <Button\n                    content='Cancel order'\n                    disabled={Object.keys(cart).length === 0}\n                    icon='trash alternate'\n                    negative\n                    onClick={() => dispatch(emptyCart())}\n                />\n                <Button\n                    content='Place order'\n                    disabled={Object.keys(cart).length === 0}\n                    icon='share square'\n                    onClick={handlePlaceOrder}\n                    primary\n                />\n            </Button.Group>\n\n            {orderModal()}\n        </>\n    );\n}","import {Message, Placeholder, Table} from \"semantic-ui-react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {fetchAllOrders, orderSelectors, orderStatusToText, selectOrdersSlice} from \"./ordersSlice\";\nimport {Link, useLocation} from \"react-router-dom\";\nimport {fetchAllProducts, productSelectors, selectProductsSlice} from \"../products/productsSlice\";\nimport {useEffect} from \"react\";\nimport Loading from \"../../app/Loading\";\nimport {truncate} from \"lodash/string\";\n\nfunction OrderRow({order}) {\n    const location = useLocation();\n    const dispatch = useDispatch();\n    const productsById = useSelector(state => productSelectors.selectEntities(state));\n    const loading = useSelector(state => selectProductsSlice(state).loading);\n    const loadError = useSelector(state => selectProductsSlice(state).error);\n\n    useEffect(() => {\n        dispatch(fetchAllProducts());\n    }, [dispatch]);\n\n    function orderContents() {\n        if (loading) {\n            return (\n                <Placeholder fluid>\n                    <Placeholder.Line/>\n                    <Placeholder.Line/>\n                </Placeholder>\n            );\n        }\n\n        if (loadError) {\n            return <Message error content={loadError}/>\n        }\n\n        const truncatedNames = Object.keys(order.products).map(productId => {\n            const product = productsById[parseInt(productId)];\n            if (product) {\n                return truncate(product.name, {length: 20});\n            }\n            return '';\n        });\n\n        return truncatedNames.join(', ');\n    }\n\n    const orderUrl = `${location.pathname}/${order.id}`;\n\n    return (\n        <Table.Row>\n            <Table.Cell>{order.date}</Table.Cell>\n            <Table.Cell>{orderStatusToText(order.status)}</Table.Cell>\n            <Table.Cell>\n                <Link to={orderUrl}>{order.id}</Link>\n            </Table.Cell>\n            <Table.Cell>\n                {orderContents()}\n            </Table.Cell>\n        </Table.Row>\n    );\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default () => {\n    const dispatch = useDispatch();\n    const orders = useSelector(state => orderSelectors.selectAll(state));\n    const loading = useSelector(state => selectOrdersSlice(state).loading);\n    const loadError = useSelector(state => selectOrdersSlice(state).error);\n\n    useEffect(() => {\n        dispatch(fetchAllOrders());\n    }, [dispatch]);\n\n    if (loading) {\n        return <Loading what='orders'/>;\n    }\n\n    if (loadError) {\n        return <Message error content={loadError}/>\n    }\n\n    if (orders) {\n        if (orders.length === 0) {\n            return (\n                <Message success>You have no orders.</Message>\n            );\n        }\n        return (\n            <>\n                <Table striped>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell width={2}>Date</Table.HeaderCell>\n                            <Table.HeaderCell width={3}>Status</Table.HeaderCell>\n                            <Table.HeaderCell width={5}>ID</Table.HeaderCell>\n                            <Table.HeaderCell width={6}>Contents</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        {orders.map(order => (\n                            <OrderRow key={order.id} order={order}/>\n                        ))}\n                    </Table.Body>\n                </Table>\n            </>\n        );\n    }\n\n    return null;\n}","import {Link, useHistory, useRouteMatch} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {cancelOrder, fetchAllOrders, orderSelectors, orderStatusToText, selectOrdersSlice} from \"./ordersSlice\";\nimport {Button, Grid, Image, Message, Placeholder, Table} from \"semantic-ui-react\";\nimport {fetchAllProducts, modifyInventory, productSelectors, selectProductsSlice} from \"../products/productsSlice\";\nimport {productImageSrc} from \"../../app/productUtils\";\nimport {currency} from \"../../app/numberFormats\";\nimport {useEffect, useState} from \"react\";\nimport Loading from \"../../app/Loading\";\n\nfunction OrderProductRow({order, productId}) {\n    const dispatch = useDispatch();\n    const product = useSelector(state => productSelectors.selectById(state, productId));\n    const loading = useSelector(state => selectProductsSlice(state).loading);\n    const loadError = useSelector(state => selectProductsSlice(state).error);\n\n    useEffect(() => {\n        dispatch(fetchAllProducts());\n    });\n\n    function productName() {\n        if (loading) {\n            return (\n                <Placeholder fluid>\n                    <Placeholder.Line/>\n                </Placeholder>\n            );\n        }\n        if (loadError) {\n            return <Message error content={loadError}/>\n        }\n        if (product) {\n            return product.name;\n        }\n    }\n\n    return (\n        <Table.Row>\n            <Table.Cell>\n                <Link to={`/products/${productId}`}>\n                    <Image size='tiny' inline src={productImageSrc(productId)}/>\n                    &nbsp;\n                    {productName()}\n                </Link>\n            </Table.Cell>\n            <Table.Cell>{order.products[productId].quantity}</Table.Cell>\n            <Table.Cell>\n                <span className='price'>{currency.format(order.products[productId].unitPrice)}</span>\n            </Table.Cell>\n        </Table.Row>\n    );\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default () => {\n    const dispatch = useDispatch();\n    const match = useRouteMatch();\n    const history = useHistory();\n    const [totalPrice, setTotalPrice] = useState(0.0);\n    const order = useSelector(state => orderSelectors.selectById(state, match.params.orderId));\n    const loading = useSelector(state => selectOrdersSlice(state).loading);\n    const loadError = useSelector(state => selectOrdersSlice(state).error);\n\n    useEffect(() => {\n        dispatch(fetchAllOrders());\n    });\n\n    useEffect(() => {\n        if (order && order.products) {\n            const productIds = Object.keys(order.products);\n            if (productIds && productIds.length) {\n                setTotalPrice(productIds.reduce((total, productId) => {\n                    const product = order.products[productId];\n                    return total + product.quantity * product.unitPrice;\n                }, 0.0));\n            }\n        }\n    }, [order]);\n\n    function reStockOrder() {\n        Object.keys(order.products).forEach(productId => {\n            dispatch(modifyInventory({\n                productId: parseInt(productId),\n                quantity: order.products[productId].quantity,\n            }))\n        });\n    }\n\n    function handleCancel() {\n        dispatch(cancelOrder(order.id));\n        reStockOrder();\n        history.replace('/orders');\n    }\n\n    if (loading) {\n        return <Loading what='order'/>;\n    }\n\n    if (loadError) {\n        return <Message error content={loadError}/>;\n    }\n\n    if (order) {\n        return (\n            <Grid celled container>\n                <Grid.Row>\n                    <Grid.Column width={6}>\n                        Order id: <b>{order.id}</b>\n                    </Grid.Column>\n                    <Grid.Column width={4}>\n                        Order date: {order.date}\n                    </Grid.Column>\n                    <Grid.Column width={6}>\n                        Order status: {orderStatusToText(order.status)}\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                    <Grid.Column width={16}>\n                        <Table striped>\n                            <Table.Header>\n                                <Table.Row>\n                                    <Table.HeaderCell width={10}>Product</Table.HeaderCell>\n                                    <Table.HeaderCell width={3}>Quantity</Table.HeaderCell>\n                                    <Table.HeaderCell width={3}>Unit Price</Table.HeaderCell>\n                                </Table.Row>\n                            </Table.Header>\n                            <Table.Body>\n                                {Object.keys(order.products).map(productId => (\n                                    <OrderProductRow\n                                        key={productId}\n                                        order={order}\n                                        productId={productId}\n                                    />\n                                ))}\n                            </Table.Body>\n                        </Table>\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                    <Grid.Column width={10}>\n                        Order total:&nbsp;\n                        <b><span className='price'>{currency.format(totalPrice)}</span></b>\n                    </Grid.Column>\n                    <Grid.Column width={6}>\n                        <Button.Group fluid>\n                            <Button icon='arrow alternate circle left outline' content='All orders'\n                                    as={Link}\n                                    to='/orders'/>\n                            <Button\n                                icon='trash alternate'\n                                negative\n                                onClick={() => handleCancel(order.id)} content='Cancel order'\n                            />\n                        </Button.Group>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        );\n    }\n\n    return null;\n};","import React from 'react';\nimport './App.css';\nimport {Container} from \"semantic-ui-react\";\nimport Navbar from \"./app/Navbar\";\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport MainContent from \"./app/MainContent\";\nimport ProductDetails from \"./features/products/ProductDetails\";\nimport ProductList from \"./features/products/ProductList\";\nimport Cart from \"./features/cart/Cart\";\nimport Orders from \"./features/orders/Orders\";\nimport OrderDetails from \"./features/orders/OrderDetails\";\n\nexport default function App() {\n    return (\n        <Container>\n            <Navbar/>\n            <Switch>\n                <Route path='/orders/:orderId'>\n                    <OrderDetails/>\n                </Route>\n                <Route path='/orders'>\n                    <Orders/>\n                </Route>\n                <Route path='/cart'>\n                    <Cart/>\n                </Route>\n                <Route path='/main'>\n                    <MainContent/>\n                </Route>\n                <Route path='/products/:productId'>\n                    <ProductDetails/>\n                </Route>\n                <Route path='/products'>\n                    <ProductList/>\n                </Route>\n                <Route path='/'>\n                    <Redirect to='/main'/>\n                </Route>\n            </Switch>\n        </Container>\n    );\n}","import {HashRouter as Router} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./app/store\";\nimport App from \"./App\";\nimport React from \"react\";\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default () => (\n    <Router>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </Router>\n);","import 'semantic-ui-css/semantic.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport WrappedApp from \"./WrappedApp\";\n\nReactDOM.render(\n    <WrappedApp/>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}